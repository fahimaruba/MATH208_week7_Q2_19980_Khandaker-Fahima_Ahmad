import numpy as np

# Generate 50 random numbers from a normal distribution with μ = 10 and σ = 0.5
normal_data = np.random.normal(10, 0.5, 50)

# Generate 50 random numbers from a uniform distribution in the range [-20, +20]
uniform_data = np.random.uniform(-20, 20, 50)

def verify_Chebyshev_ineq(lst, k):
    # Calculate μ (mean) and σ (standard deviation) of the data
    mean = np.mean(lst)
    std_dev = np.std(lst)

    # Calculate the range [μ - kσ, μ + kσ]
    lower_limit = mean - k * std_dev
    upper_limit = mean + k * std_dev

    # Count how many numbers are within the range
    count = np.sum((lst >= lower_limit) & (lst <= upper_limit))

    # Calculate the probability of |X - μ| < kσ
    probability = count / len(lst)

    # Calculate the theoretical probability using Chebyshev's inequality
    theoretical_probability = 1 - 1 / (k ** 2)

    return count, probability, theoretical_probability

# Test cases
k = 1
cnt, prob, theory_prob = verify_Chebyshev_ineq(normal_data, k)
print(f"When k = {k}, Probability of |X - μ| < {k}σ = {prob:.2f}; 1 - 1/(k^2) = {theory_prob:.15f}")
print(f"When k = {k}, P(|X - μ| < kσ) >= 1 - 1/k^2 is {prob >= theory_prob}")

k = 2 ** 0.5  # k = 2
cnt, prob, theory_prob = verify_Chebyshev_ineq(normal_data, k)
print(f"When k = {k}, Probability of |X - μ| < {k}σ = {prob:.2f}; 1 - 1/(k^2) = {theory_prob:.15f}")
print(f"When k = {k}, P(|X - μ| < kσ) >= 1 - 1/k^2 is {prob >= theory_prob}")

k = 1.5
cnt, prob, theory_prob = verify_Chebyshev_ineq(normal_data, k)
print(f"When k = {k}, Probability of |X - μ| < {k}σ = {prob:.2f}; 1 - 1/(k^2) = {theory_prob:.15f}")
print(f"When k = {k}, P(|X - μ| < kσ) >= 1 - 1/k^2 is {prob >= theory_prob}")

k = 2
cnt, prob, theory_prob = verify_Chebyshev_ineq(normal_data, k)
print(f"When k = {k}, Probability of |X - μ| < {k}σ = {prob:.2f}; 1 - 1/(k^2) = {theory_prob:.15f}")
print(f"When k = {k}, P(|X - μ| < kσ) >= 1 - 1/k^2 is {prob >= theory_prob}")

k = 3
cnt, prob, theory_prob = verify_Chebyshev_ineq(normal_data, k)
print(f"When k = {k}, Probability of |X - μ| < {k}σ = {prob:.2f}; 1 - 1/(k^2) = {theory_prob:.15f}")
print(f"When k = {k}, P(|X - μ| < kσ) >= 1 - 1/k^2 is {prob >= theory_prob}")

# Test using uniform data
k = 1
cnt, prob, theory_prob = verify_Chebyshev_ineq(uniform_data, k)
print(f"\nUsing uniform data - When k = {k}, Probability of |X - μ| < {k}σ = {prob:.2f}; 1 - 1/(k^2) = {theory_prob:.15f}")
print(f"When k = {k}, P(|X - μ| < kσ) >= 1 - 1/k^2 is {prob >= theory_prob}")
